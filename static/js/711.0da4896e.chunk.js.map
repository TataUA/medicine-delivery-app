{"version":3,"file":"static/js/711.0da4896e.chunk.js","mappings":"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","sources":["pages/ShoppingCart.styled.js","components/ProductBasketItem/ProductBasketItem.styled.js","components/ProductBasketItem/ProductBasketItem.jsx","pages/ShoppingCart.jsx","utils/axios.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\nexport const UserWrapper = styled.div`\n  width: calc((100% - 30px) / 2);\n  height: 480px;\n  padding: 15px 30px;\n  border: 3px solid var(--border);\n  border-radius: 8px;\n\n  > label {\n    display: block;\n    margin-bottom: 30px;\n    font-weight: 600;\n    font-size: 18px;\n\n    > input {\n      display: block;\n      width: 400px;\n      height: 40px;\n      margin-top: 8px;\n      border: 3px solid var(--border);\n      border-radius: 8px;\n    }\n  }\n`;\n\nexport const BasketWrapper = styled.div`\n  width: calc((100% - 30px) / 2);\n  height: 480px;\n  padding: 15px 30px;\n  border: 3px solid var(--border);\n  border-radius: 8px;\n  overflow-y: auto;\n`;\n\nexport const BasketList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  gap: 15px;\n`;\n\nexport const FinalWrapper = styled.div`\n  display: flex;\n  justify-content: right;\n  align-items: center;\n\n  > p {\n    font-weight: 600;\n    font-size: 22px;\n    margin-right: 80px;\n  }\n\n  > button {\n    width: 260px;\n    height: 60px;\n    border: 2px solid var(--border);\n    border-radius: 8px;\n    font-weight: 600;\n    font-size: 22px;\n\n    &:hover,\n    :focus {\n      transform: scale(1.1);\n      transition: var(--transition);\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const BasketItem = styled.li`\n  position: relative;\n  display: flex;\n  width: 100%;\n  padding: 8px;\n  border: 3px solid var(--border);\n  border-radius: 8px;\n\n  > img {\n    border-radius: 8px;\n    margin-right: 8px;\n  }\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    > h2 {\n      margin-bottom: 8px;\n      font-weight: 600;\n      font-size: 18px;\n    }\n\n    > p {\n      margin-bottom: 16px;\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  width: 200px;\n  text-align: center;\n  > input {\n    width: 200px;\n    height: 30px;\n    border: 2px solid var(--border);\n    border-radius: 8px;\n    text-align: center;\n  }\n`;\nexport const ButtonUp = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  align-items: start;\n  width: 30px;\n  height: 15px;\n  border: 2px solid var(--border);\n  border-top-right-radius: 8px;\n  background-color: var(--gray);\n\n  &:hover,\n  :focus {\n    background-color: var(--border);\n    transition: var(--transition);\n  }\n`;\n\nexport const ButtonDown = styled.button`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  align-items: end;\n  width: 30px;\n  height: 15px;\n  border: 2px solid var(--border);\n  border-bottom-right-radius: 8px;\n  background-color: var(--gray);\n\n  &:hover {\n    background-color: var(--border);\n    transition: var(--transition);\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  width: 30px;\n  height: 30px;\n  border: 2px solid var(--border);\n  border-radius: 50%;\n  text-align: center;\n  font-weight: 600;\n\n  &:hover {\n    transform: scale(1.1);\n    transition: var(--transition);\n  }\n`;\n","import { useContext } from \"react\";\nimport { CartContext } from \"components/App\";\nimport {\n  BasketItem,\n  InputWrapper,\n  ButtonUp,\n  ButtonDown,\n  ButtonClose,\n} from \"./ProductBasketItem.styled\";\n\nexport const ProductBasketItem = ({ product }) => {\n  const { _id, name, price, image, quantity } = product;\n  const { addedProducts, setAddedProducts } = useContext(CartContext);\n\n  const handleIncreaseQuantity = (productId) => {\n    const updatedProducts = addedProducts.map((product) => {\n      if (product._id === productId) {\n        const newQuantity = Math.min(10, product.quantity + 1);\n        return { ...product, quantity: newQuantity };\n      }\n      return product;\n    });\n    setAddedProducts(updatedProducts);\n  };\n\n  const handleDecreaseQuantity = (productId) => {\n    const updatedProducts = addedProducts.map((product) => {\n      if (product._id === productId) {\n        const newQuantity = Math.max(1, product.quantity - 1);\n        return { ...product, quantity: newQuantity };\n      }\n      return product;\n    });\n    setAddedProducts(updatedProducts);\n  };\n\n  const handleRemoveProduct = (productId) => {\n    const updatedProducts = addedProducts.filter(\n      (product) => product._id !== productId\n    );\n    setAddedProducts(updatedProducts);\n  };\n\n  return (\n    <BasketItem key={_id}>\n      <img src={image} width={180} height={90} alt=\"\" />\n      <div>\n        <h2>{name}</h2>\n        <p>Price: {price} â‚´</p>\n        <InputWrapper>\n          <input value={quantity} readOnly></input>\n          <ButtonUp type=\"button\" onClick={() => handleIncreaseQuantity(_id)}>\n            &#x1F781;\n          </ButtonUp>\n          <ButtonDown type=\"button\" onClick={() => handleDecreaseQuantity(_id)}>\n            &#x1F783;\n          </ButtonDown>\n        </InputWrapper>\n        <ButtonClose type=\"button\" onClick={() => handleRemoveProduct(_id)}>\n          X\n        </ButtonClose>\n      </div>\n    </BasketItem>\n  );\n};\n","import { useContext, useState } from \"react\";\nimport axios from \"../utils/axios\";\nimport { CartContext } from \"components/App\";\nimport {\n  ContentWrapper,\n  UserWrapper,\n  BasketWrapper,\n  BasketList,\n  FinalWrapper,\n} from \"./ShoppingCart.styled\";\nimport { ProductBasketItem } from \"components/ProductBasketItem/ProductBasketItem\";\n\nconst ShoppingCart = () => {\n  const { addedProducts, setAddedProducts } = useContext(CartContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  const total = addedProducts.reduce((accumulator, product) => {\n    return accumulator + product.price * product.quantity;\n  }, 0);\n\n  async function addOrder(newOrder) {\n    try {\n      const { data } = await axios.post(\"api/orders\", newOrder);\n      return data;\n    } catch (error) {\n      throw new Error(\"Order didn`t add\");\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (addedProducts.length === 0) {\n      alert(\"You need to add product...\");\n    }\n    const userData = {\n      username: name,\n      email,\n      phone,\n      address,\n      products: addedProducts,\n    };\n\n    try {\n      const response = await addOrder(userData);\n      console.log(response);\n      setName(\"\");\n      setPhone(\"\");\n      setEmail(\"\");\n      setAddress(\"\");\n      setAddedProducts([]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <ContentWrapper>\n          <UserWrapper>\n            <label htmlFor=\"name\">\n              Name:\n              <input\n                type=\"text\"\n                value={name}\n                placeholder=\"Type your name...\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                required\n              />\n            </label>\n            <label htmlFor=\"name\">\n              Email:\n              <input\n                type=\"email\"\n                value={email}\n                placeholder=\"example@gmail.com\"\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                required\n              />\n            </label>\n            <label htmlFor=\"name\">\n              Phone:\n              <input\n                type=\"tel\"\n                value={phone}\n                placeholder=\"+380001234567\"\n                onChange={(e) => {\n                  setPhone(e.target.value);\n                }}\n                pattern=\"^\\+380\\d{9}$\"\n                required\n              />\n            </label>\n            <label htmlFor=\"name\">\n              Address:\n              <input\n                type=\"text\"\n                value={address}\n                placeholder=\"Type your delivery address\"\n                onChange={(e) => {\n                  setAddress(e.target.value);\n                }}\n                required\n              />\n            </label>\n          </UserWrapper>\n          <BasketWrapper>\n            <BasketList>\n              {addedProducts &&\n                addedProducts.map((product) => (\n                  <ProductBasketItem key={product._id} product={product} />\n                ))}\n            </BasketList>\n          </BasketWrapper>\n        </ContentWrapper>\n        <FinalWrapper>\n          <p>Total price: {total} â‚´</p>\n          <button type=\"submit\">Submit</button>\n        </FinalWrapper>\n      </form>\n    </div>\n  );\n};\n\nexport default ShoppingCart;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://medicine-delivery-app-backend-hkda.onrender.com\",\n});\n\nexport default instance;\n"],"names":["ContentWrapper","styled","div","_templateObject","_taggedTemplateLiteral","UserWrapper","_templateObject2","BasketWrapper","_templateObject3","BasketList","ul","_templateObject4","FinalWrapper","_templateObject5","BasketItem","li","InputWrapper","ButtonUp","button","ButtonDown","ButtonClose","ProductBasketItem","_ref","product","_id","name","price","image","quantity","addedProducts","setAddedProducts","useContext","CartContext","_jsxs","children","_jsx","src","width","height","alt","value","readOnly","type","onClick","productId","updatedProducts","map","newQuantity","Math","min","handleIncreaseQuantity","max","handleDecreaseQuantity","filter","handleRemoveProduct","ShoppingCart","setName","useState","email","setEmail","phone","setPhone","address","setAddress","total","reduce","accumulator","onSubmit","async","e","preventDefault","length","alert","userData","username","products","response","newOrder","data","axios","post","error","Error","addOrder","console","log","htmlFor","placeholder","onChange","target","required","pattern","create","baseURL"],"sourceRoot":""}